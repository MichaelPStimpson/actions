name: Deploy to Salesforce Environment
on:
  workflow_call:
    inputs:
      sandbox:
        required: true
        type: boolean
      check-only:
        required: true
        type: boolean
      run-scan:
        required: true
        type: boolean
      run-tests:
        required: true
        type: boolean
    secrets:
      CONSUMER_KEY:
        required: true
      USERNAME:
        required: true
      URL:
        required: true
      JWT:
        required: true

jobs:
  deploy-script:
    runs-on: ubuntu-latest
    container: michaelpstimpson/sfdx-plus:latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Scan Code
        if: ${{ inputs.run-scan == true }}
        #This plugin is installed in the docker img, but I had a path issue.
        #Fixed and pushed it, but GH caches the images, installing here as a temporary workaround.
        run: |
          sfdx plugins install @salesforce/sfdx-scanner
          sfdx scanner:run \
          --target "force-app" \
          --format "json" \
          --category Security > ~/sfdx-scanner-report.json
          cat ~/sfdx-scanner-report.json
          if [[ ! grep -q "No rule violations found." ~/sfdx-scanner-report.json ]]; then
            exit 1
          fi

      - name: Set Audience URL
        run: |
          if [ "${{ inputs.sandbox }}" == true]; then
            echo "SFDX_AUDIENCE_URL=https://test.salesforce.com" >> $GITHUB_ENV
          else
            echo "SFDX_AUDIENCE_URL=https://login.salesforce.com" >> $GITHUB_ENV
          fi

      - name: Auth Salesforce Environment
        run: |
          echo "$JWT" > ~/server.key
          sfdx force auth jwt grant \
          --client-id $CONSUMER_KEY \
          --jwt-key-file ~/server.key \
          --username $USERNAME \
          --instance-url $URL \
          -s
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          USERNAME: ${{ secrets.USERNAME }}
          URL: ${{ secrets.URL }}
          JWT: ${{ secrets.JWT }}

      - name: Create Packages
        #This plugin is installed in the docker img, but I had a path issue.
        #Fixed and pushed it, but GH caches the images, installing here as a temporary workaround.
        run: |
          echo 'y' | sfdx plugins install sfdx-git-delta
          mkdir ~/manifest
          sfdx sgd:source:delta \
          --to "HEAD" \
          --from "HEAD^" \
          --source force-app \
          --output ~/manifest \
          --ignore .sgdignore \
          --ignore-destructive .sgdignoreDestructive
          echo "----PACKAGE START"----"
          cat ~/manifest/package/package.xml
          echo "----PACKAGE END"----"
          echo "----DESTRUCTIVE PACKAGE START"----"
          cat ~/manifest/destructiveChanges/destructiveChanges.xml
          echo "----DESTRUCTIVE PACKAGE END"----"

      - name: Deployment
        run: |
          if [[ ! $(grep -q "<members>" ~/manifest/package/package.xml) \
            && ! $(grep -q "<members>" ~/manifest/destructiveChanges/destructiveChanges.xml) ]]; then
            echo "No components to deploy."
            exit 0
          fi
          DEPLOY_COMMAND="sfdx force source deploy \ 
          --sourcepath force-app \
          --manifest ~/manifest/package/package.xml \
          --postdestructivechanges ~/manifest/destructiveChanges/destructiveChanges.xml"
          if [ "${{ inputs.check-only }}" == true]; then
            DEPLOY_COMMAND += " --checkonly"
          fi
          if [ "${{ inputs.run-tests }}" == true]; then
            DEPLOY_COMMAND += " --testlevel=RunLocalTests"
          fi
          echo "Deploy command: $DEPLOY_COMMAND"
          eval "$DEPLOY_COMMAND"

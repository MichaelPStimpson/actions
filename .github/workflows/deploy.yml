name: Main Deploy

on: workflow_dispatch
 inputs:
      environment:
        description: 'Deploy target'
        required: true
        default: uat
        type: choice
        options:
        - dev
        - qa
        - uat
        - prod
      check-only:
        description: 'Check deploy?'
        type: boolean

jobs:
  main-deploy:
    runs-on: ubuntu-latest
    container: michaelpstimpson/sf-pipeline:full

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Authenticate
        run: |
          if [ ${{ inputs.environment }} != "prod" ]; then
            echo "SFDX_AUDIENCE_URL=https://test.salesforce.com" >> $GITHUB_ENV
          fi

          if [ ${{ inputs.environment }} = "dev" ]; then
            echo ${{ secrets.DEV_AUTH_KEY }} > ~/AUTH_URL
          elif [ ${{ inputs.environment }} = "qa" ]; then
            echo ${{ secrets.QA_AUTH_KEY }} > ~/AUTH_URL
          elif [ ${{ inputs.environment }} = "uat" ]; then
            echo ${{ secrets.UAT_AUTH_KEY }} > ~/AUTH_URL
          elif [ ${{ inputs.environment }} = "prod" ]; then
            echo ${{ secrets.PROD_AUTH_KEY }} > ~/AUTH_URL
          fi
          
          sfdx org login sfdx-url -f ~/AUTH_URL -s

      - name: Create Packages
        run: |
          git config --global --add safe.directory /__w/actions/actions

          #Replace the base ref with the latest release tag

          BASE="origin/${{ github.base_ref }}"
          HEAD="origin/${{ github.head_ref }}"
          MERGE_BASE=$(git merge-base $BASE $HEAD)

          mkdir ~/manifest
          sfdx sgd:source:delta \
          --to $HEAD \
          --from $MERGE_BASE \
          --source force-app \
          --output ~/manifest \
          --ignore .sgdignore \
          --ignore-destructive .sgdignoreDestructive

      - name: Print package
        run: cat ~/manifest/package/package.xml

      - name: Print destructive package
        run: cat ~/manifest/destructiveChanges/destructiveChanges.xml

      - name: Build & test
        run: |
          if ${{ inputs.check-only }} then

            #RunSpecifiedTests

            sf force source deploy 
            --sourcepath force-app \
            --checkonly \
            --testlevel=RunLocalTests \
            --manifest ~/manifest/package/package.xml \
            --postdestructivechanges ~/manifest/destructiveChanges/destructiveChanges.xml

            sf project deploy quick -r

          else

            sf force source deploy 
            --sourcepath force-app \
            --manifest ~/manifest/package/package.xml \
            --postdestructivechanges ~/manifest/destructiveChanges/destructiveChanges.xml

            sf project deploy quick -r

          fi
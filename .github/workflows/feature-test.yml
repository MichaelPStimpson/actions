name: Feature Test

on:
  pull_request:
    branches:
      - feature/**
    types:
      - opened
      - edited
      - synchronize
      - reopened
    paths:
      - "force-app/**"

jobs:
  feature-test:
    runs-on: ubuntu-latest
    container: michaelpstimpson/sf-pipeline:rc

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Scan
        run: |
          git remote -v
          node scripts/node/copyPrClassesToScannerDir.js ${{ github.event.number }}

          sfdx scanner:run \
            --target "temp" \
            --format "json" \
            --pmdconfig=pmd/apex.xml \
            --category Security > ~/sfdx-scanner-report.json

          if ! grep -q "No rule violations found." ~/sfdx-scanner-report.json; then
            exit 1
          fi

          cat ~/sfdx-scanner-report.json

      - name: Authenticate
        run: |
          echo "$AUTH_URL" > ~/AUTH_URL
          sfdx org login sfdx-url -f ~/AUTH_URL -s
        env:
          AUTH_URL: ${{ secrets.QA_AUTH_KEY }}

      #TODO: Investigate GitHub action container "SFDX plugins not found.", but local container no issue.
      - name: Install SGD
        run: echo 'y' | sfdx plugins install sfdx-git-delta

      - name: Create Packages
        run: |
          git config --global --add safe.directory /__w/actions/actions

          BASE="origin/${{ github.event.pull_request.base.ref }}"
          HEAD="origin/${{ github.event.pull_request.head.ref }}"
          MERGE_BASE=$(git merge-base $BASE $HEAD)

          mkdir ~/manifest
          sfdx sgd:source:delta \
            --to $HEAD \
            --from $MERGE_BASE \
            --source force-app \
            --output ~/manifest \
            --ignore .sgdignore \
            --ignore-destructive .sgdignoreDestructive

      - name: Print package
        run: cat ~/manifest/package/package.xml

      - name: Print destructive package
        run: cat ~/manifest/destructiveChanges/destructiveChanges.xml

      - name: Build & test
        run: |
          echo ${{ github.token }} | gh auth --hostname github.boozallencsn.com --with-token
          node scripts/node/populateTestsToRunEnvVar.js ${{ github.event.number }}

          TESTS_TO_RUN=$(cat testsToRun.txt)

          sf force source deploy 
            --sourcepath force-app \
            --checkonly \
            --testlevel=RunSpecifiedTests \
            --runtests "$TESTS_TO_RUN" \
            --manifest ~/manifest/package/package.xml \
            --postdestructivechanges ~/manifest/destructiveChanges/destructiveChanges.xml \
            --ignorewarnings \
            -- verbose
